plugins {
    id 'java'
    id 'java-library'
    id 'signing'
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "8.1.1"
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
    id 'jacoco'
    id 'jacoco-report-aggregation'
}

group 'dev.mayuna'
version '3.5.0'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url "https://m2.chew.pro/snapshots" }
    maven { url "https://s01.oss.sonatype.org/content/repositories/releases" }
}

dependencies {
    // JDA
    api 'net.dv8tion:JDA:5.3.2'

    // GSon
    api 'com.google.code.gson:gson:2.13.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.+'
    annotationProcessor 'org.projectlombok:lombok:1.18.+'
    testCompileOnly 'org.projectlombok:lombok:1.18.+'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.+'
}

// == Quick tasks == //

task publishCloseAndRelease() {
    dependsOn 'publishToSonatype'
    dependsOn 'closeAndReleaseSonatypeStagingRepository'
}

shadowJar {

}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

// UTF-8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// == Maven publishing == //

publishing {

    publications {
        shadow(MavenPublication) {
            groupId = 'dev.mayuna'
            artifactId = 'mayus-jda-utilities'
            version = getVersion()
            from components.java

            pom {
                name = 'Mayu\'s JDA Utilities'
                description = 'Utilities which can help with the development of Discord bots using the JDA framework'
                url = 'https://github.com/lilmayu/MayusJDAUtilities'

                scm {
                    connection = 'scm:https://github.com/lilmayu/MayusJDAUtilities'
                    developerConnection = 'scm:git:https://github.com/lilmayu/MayusJDAUtilities.git'
                    url = 'https://github.com/lilmayu/MayusJDAUtilities'
                }

                licenses {
                    license {
                        name = 'GNU Lesser General Public License v3.0'
                        url = 'https://www.gnu.org/licenses/lgpl-3.0.en.html'
                    }
                }

                developers {
                    developer {
                        id = 'mayuna'
                        name = 'Marek Lof'
                        email = 'uwulilmayu@gmail.com'
                    }
                }
            }
        }
    }

    publishing {
        repositories {
            maven {
                credentials {
                    username = project.properties['ossrhUsername'] ?: System.getenv('ossrhUsername')
                    password = project.properties['ossrhPassword'] ?: System.getenv('ossrhPassword')
                }

                url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            }
        }
    }
}

signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.shadow
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            username = project.properties['ossrhUsername'] ?: System.getenv('ossrhUsername')
            password = project.properties['ossrhPassword'] ?: System.getenv('ossrhPassword')
        }
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

shadowJar.dependsOn javadocJar
shadowJar.dependsOn sourcesJar
shadowJar.dependsOn jar

components.java.withVariantsFromConfiguration(configurations.shadowRuntimeElements) {
    skip()
}
